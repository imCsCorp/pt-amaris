AWSTemplateFormatVersion: '2010-09-09'
Description: Infraestructura completa para prueba t√©cnica (Backend + Frontend en ECS Fargate + DynamoDB)

Parameters:
  BackendImageUri:
    Type: String
    Default: public.ecr.aws/h7b2e7k1/casv/funds-api:latest
    Description: URI p√∫blica del backend (Spring Boot)

  FrontendImageUri:
    Type: String
    Default: public.ecr.aws/h7b2e7k1/casv/funds-client:latest
    Description: URI p√∫blica del frontend (Angular)

Resources:

  ### üê≥ Repositorios p√∫blicos
  BackendPublicEcr:
    Type: AWS::ECR::PublicRepository
    Properties:
      RepositoryName: funds-api

  FrontendPublicEcr:
    Type: AWS::ECR::PublicRepository
    Properties:
      RepositoryName: funds-client

  ### CloudWatch Logs
  FundsLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/funds-api
      RetentionInDays: 7

  FrontendLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/funds-client
      RetentionInDays: 7

  ### Roles
  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: funds-api-task-execution-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - arn:aws:iam::aws:policy/AmazonSESFullAccess
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess

  ### Red y Seguridad
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: funds-vpc

  Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [ 0, !GetAZs '' ]

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  Route:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet
      RouteTableId: !Ref RouteTable

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Permitir acceso HTTP
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 8080
          CidrIp: 0.0.0.0/0

  ### Cluster ECS
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: funds-api-cluster

  ### Task Definitions
  BackendTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: funds-api-task
      Cpu: 512
      Memory: 1024
      NetworkMode: awsvpc
      RequiresCompatibilities: [ FARGATE ]
      ExecutionRoleArn: !GetAtt TaskExecutionRole.Arn
      ContainerDefinitions:
        - Name: funds-api
          Image: !Ref BackendImageUri
          PortMappings:
            - ContainerPort: 8080
          Environment:
            - Name: AWS_REGION
              Value: us-east-1
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/funds-api
              awslogs-region: us-east-1
              awslogs-stream-prefix: ecs

  FrontendTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: funds-client-task
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      RequiresCompatibilities: [ FARGATE ]
      ExecutionRoleArn: !GetAtt TaskExecutionRole.Arn
      ContainerDefinitions:
        - Name: funds-client
          Image: !Ref FrontendImageUri
          PortMappings:
            - ContainerPort: 80
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/funds-client
              awslogs-region: us-east-1
              awslogs-stream-prefix: ecs

  ### Servicios ECS
  BackendService:
    Type: AWS::ECS::Service
    DependsOn: AttachGateway
    Properties:
      Cluster: !Ref ECSCluster
      LaunchType: FARGATE
      DesiredCount: 1
      TaskDefinition: !Ref BackendTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups: [ !Ref SecurityGroup ]
          Subnets: [ !Ref Subnet ]

  FrontendService:
    Type: AWS::ECS::Service
    DependsOn: AttachGateway
    Properties:
      Cluster: !Ref ECSCluster
      LaunchType: FARGATE
      DesiredCount: 1
      TaskDefinition: !Ref FrontendTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups: [ !Ref SecurityGroup ]
          Subnets: [ !Ref Subnet ]

  ### DynamoDB
  UserTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: User
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  FundTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Fund
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: N
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  TransactionTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Transaction
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

Outputs:
  ClusterName:
    Description: ECS Cluster
    Value: !Ref ECSCluster
  BackendService:
    Description: Backend Service (funds-api)
    Value: !Ref BackendService
  FrontendService:
    Description: Frontend Service (funds-client)
    Value: !Ref FrontendService
  DynamoDBTables:
    Value: User, Fund, Transaction
  PublicECRRepositories:
    Value: funds-api, funds-client
